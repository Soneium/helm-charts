kind: ConfigMap
apiVersion: v1
metadata:
  name: proxyd-toml
data:
  proxyd.toml: |
    # List of WS methods to whitelist.
    ws_method_whitelist = [
      "eth_subscribe",
      "eth_call",
      "eth_chainId"
    ]

    # Enable WS on this backend group. There can only be one WS-enabled backend group.
    ws_backend_group = "main"

    [server]
    log_level = "info"
    max_body_size_bytes = 5242880 # 5 mb
    rpc_host = "0.0.0.0"
    rpc_port = 8545
    ws_host = "0.0.0.0"
    # Port for the above
    # Set the ws_port to 0 to disable WS
    ws_port = 8546

    [metrics]
    enabled = true
    host = "0.0.0.0"
    port = 7300

    [cache]
    enabled = true

    [backend]
    max_response_size_bytes = 52428800 # 50 mb
    max_retries = 0
    out_of_service_seconds = 0
    response_timeout_seconds = 5

    [backends]
    {{- $groupMain := list }}
    {{- $groupMulticall := list }}
    {{- with .Values.proxyd.nodes }}
    {{- range . }}
    {{- $name := regexReplaceAll "(http|https)://([^/]+).*" .url "${2}" | replace "." "_" | replace ":" "_"  }}

    [backends.{{ $name }}]
    max_ws_conns = 2000
    rpc_url = "{{ .url }}"
    ws_url = "{{ .ws | default "ws://dummy"}}"
    {{- if .backendGroup_Main }}
      {{- $groupMain = append $groupMain $name }}
    {{- end }}
    {{- if .backendGroup_Multicall }}
      {{- $groupMulticall = append $groupMulticall $name }}
    {{- end }}
    {{- end }}
    {{- end }}

    [backend_groups]
    [backend_groups.main]
    backends = {{toJson $groupMain}}
    routing_strategy = "consensus_aware"

    [backend_groups.multicall]
    backends = {{toJson $groupMulticall}}
    routing_strategy = "multicall"

    [rpc_method_mappings]
    debug_chainConfig = "main"
    debug_dbGet = "main"
    debug_getRawReceipts = "main"
    debug_storageRangeAt = "main"
    debug_traceBlockByHash = "main"
    debug_traceBlockByNumber = "main"
    debug_traceTransaction = "main"
    eth_accounts = "main"
    eth_blockNumber = "main"
    eth_call = "main"
    eth_chainId = "main"
    eth_estimateGas = "main"
    eth_feeHistory = "main"
    eth_gasPrice = "main"
    eth_getBalance = "main"
    eth_getBlockByHash = "main"
    eth_getBlockByNumber = "main"
    eth_getBlockRange = "main"
    eth_getBlockReceipts = "main"
    eth_getBlockTransactionCountByHash = "main"
    eth_getBlockTransactionCountByNumber = "main"
    eth_getCode = "main"
    eth_getLogs = "main"
    eth_getProof = "main"
    eth_getStorageAt = "main"
    eth_getTransactionByBlockHashAndIndex = "main"
    eth_getTransactionByHash = "main"
    eth_getTransactionCount = "main"
    eth_getTransactionReceipt = "main"
    eth_getUncleByBlockHashAndIndex = "main"
    eth_maxPriorityFeePerGas = "main"
    eth_newFilter = "main"
    eth_getFilterChanges = "main"
    eth_sendRawTransaction = "multicall"
    eth_syncing = "main"
    net_version = "main"
    rollup_getInfo = "main"
    web3_clientVersion = "main"

    [batch]
    error_message = "Over Max batche size (1000)"
    max_size = 1000

    [rate_limit]
    base_interval = "1m"
    base_rate = 0
    enable_backend_rate_limiter = false
    error_message = "L1 rate limit reached (should not happen)"
    use_redis = false
